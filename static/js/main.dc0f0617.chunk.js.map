{"version":3,"sources":["components/Footer.js","components/Header.js","components/QuantityCart.js","pages/Cart.js","services/api.js","pages/Home.js","components/InputRating.js","pages/Details.js","pages/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","React","Component","Header","storageList","this","props","to","data-testid","length","defaultProps","QuantityCart","handleInputQuantity","e","preventDefault","handleBtnIncrease","target","value","handleQuantity","id","handleBtnDecrease","quantityProduct","max","style","borderRadius","type","onClick","onChange","Cart","state","productList","productListReduced","empty","redirect","getLocalStorageList","JSON","parse","localStorage","getItem","setState","newArr","reduce","acc","current","find","item","concat","change","productAdd","arr","push","setItem","stringify","arrayItems","filter","shift","arrayWithouItem","handleBtnCheckout","map","product","key","width","src","thumbnail","alt","title","price","available_quantity","getCategories","fetch","fetchApi","json","response","getProductsFromCategoryAndQuery","categoryId","query","urlBase","url","Home","queryInput","categories","products","searched","getListCategories","categoriesList","handleBtnSearch","name","responseApi","results","handleChange","handleBtnAddCart","handleCategorySearch","category","htmlFor","input","textDecoration","color","shipping","free_shipping","InputRating","Details","inputRating","email","mensagem","evaluations","hasEvaluations","idItem","itemPicture","getLocal","match","params","data","list","pictures","getLocalStorageEvaluations","evaluationsList","handleBtnCart","event","console","log","checked","valor","handleSubmit","obj","placeholder","evaluation","Checkout","handleBtnSubmit","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dc0f0617.chunk.js","sourcesContent":["import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"cart-text\">\n        <span>\n          &copy; Todos os direitos reservados Grupo\n          26 - Projeto da Trybe - André, Lucas, Flávia, Mylena e Rafael.\n        </span>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    const { storageList } = this.props;\n    return (\n      <header className=\"cart-text\">\n        <h1>Luca&apos;store</h1>\n        <div className=\"login-cart\">\n          <Link className=\"linkHome\" to=\"/\">\n            <p>home</p>\n          </Link>\n          <p>login</p>\n          <div>\n            <Link to=\"/cart\">\n              <span className=\"material-symbols-outlined\">\n                shopping_cart\n              </span>\n              <div className=\"count-cart\">\n                {storageList && (\n                  <h2\n                    data-testid=\"shopping-cart-size\"\n                  >\n                    {storageList.length}\n\n                  </h2>\n                )}\n              </div>\n            </Link>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  storageList: PropTypes.arrayOf(\n    PropTypes.shape({\n      available_quantity: PropTypes.number,\n      pictures: PropTypes.arrayOf(\n        PropTypes.shape({\n          url: PropTypes.string,\n        }),\n      ),\n    }),\n  ),\n};\n\nHeader.defaultProps = {\n  storageList: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass QuantityCart extends React.Component {\n  handleInputQuantity = (e) => {\n    e.preventDefault();\n  }\n\n  handleBtnIncrease = ({ target }) => {\n    const { value } = target;\n    if (value === 'max') {\n      return;\n    }\n    const { handleQuantity, id } = this.props;\n    handleQuantity(id, true);\n  }\n\n  handleBtnDecrease = () => {\n    const { handleQuantity, id } = this.props;\n    handleQuantity(id, false);\n  }\n\n  render() {\n    const { quantityProduct, max } = this.props;\n    return (\n      <div className=\"increaseDecreaseItem\">\n        <button\n          style={ { borderRadius: '5px' } }\n          type=\"button\"\n          onClick={ this.handleBtnDecrease }\n          data-testid=\"product-decrease-quantity\"\n        >\n          -\n        </button>\n        <input\n          type=\"text\"\n          id=\"inputQuantity\"\n          value={ quantityProduct }\n          onChange={ this.handleInputQuantity }\n        />\n        <button\n          style={ { borderRadius: '5px' } }\n          type=\"button\"\n          value={ max }\n          onClick={ this.handleBtnIncrease }\n          data-testid=\"product-increase-quantity\"\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n\nQuantityCart.propTypes = {\n  handleQuantity: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  quantityProduct: PropTypes.number.isRequired,\n  max: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n};\n\nQuantityCart.defaultProps = {\n  max: '',\n};\n\nexport default QuantityCart;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport QuantityCart from '../components/QuantityCart';\n\nclass Cart extends React.Component {\n  state = {\n    productList: [],\n    productListReduced: [],\n    empty: true,\n    redirect: false,\n  };\n\n  componentDidMount() {\n    this.getLocalStorageList();\n  }\n\n  getLocalStorageList = () => {\n    const productList = JSON.parse(localStorage.getItem('productId'));\n    if (productList) {\n      this.setState({ productList }, () => {\n        // Referência: https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\n        const arr = productList;\n        const newArr = arr.reduce((acc, current) => {\n          const singleItem = acc.find((item) => item.id === current.id);\n          if (!singleItem) {\n            return acc.concat([current]);\n          }\n          return acc;\n        }, []);\n        this.setState({\n          productListReduced: newArr,\n          empty: false,\n        });\n      });\n    }\n  }\n\n  handleQuantity = (id, change) => {\n    if (change) {\n      const { productList } = this.state;\n      const productAdd = productList.find((item) => item.id === id);\n      const arr = [...productList];\n      arr.push(productAdd);\n      return this.setState({ productList: arr }, () => {\n        localStorage.setItem('productId', JSON.stringify(arr));\n      });\n    }\n    const { productList } = this.state;\n    const arrayItems = productList.filter((item) => item.id === id);\n    arrayItems.shift();\n    const arrayWithouItem = productList.filter((item) => item.id !== id);\n    const arr = [...arrayWithouItem, ...arrayItems];\n    this.setState({ productList: arr }, () => {\n      localStorage.setItem('productId', JSON.stringify(arr));\n    });\n  }\n\n  handleBtnCheckout = () => {\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { productList, productListReduced, empty, redirect } = this.state;\n    if (redirect) {\n      return (\n        <Redirect to=\"/checkout\" />\n      );\n    }\n    return (\n      <>\n        <div className=\"main-content\">\n          <Header storageList={ productList } />\n          <section className=\"cards-content-buy\">\n            {!empty ? (\n              productListReduced.map((product) => (\n                <section key={ product.id } className=\"product-cart\">\n                  <h1 data-testid=\"shopping-cart-product-quantity\">\n                    {\n                      productList\n                        .filter((item) => item.id === product.id)\n                        .length <= 0 ? 1 : productList\n                          .filter((item) => item.id === product.id)\n                          .length\n                    }\n                    {' unidades'}\n                  </h1>\n                  <div data-testid=\"product\" className=\"productInfos\">\n                    <img\n                      style={ { width: '30%' } }\n                      src={ product.thumbnail }\n                      alt={ product.title }\n                    />\n                    <h4>\n                      Preço:\n                      { product.price }\n                    </h4>\n                    <p data-testid=\"shopping-cart-product-name\">{ product.title }</p>\n                  </div>\n                  <QuantityCart\n                    quantityProduct={ productList\n                      .filter((item) => item.id === product.id)\n                      .length <= 0 ? 1 : productList\n                        .filter((item) => item.id === product.id)\n                        .length }\n                    max={ productList\n                      .filter((item) => item.id === product.id)\n                      .length === product.available_quantity && 'max' }\n                    id={ product.id }\n                    handleQuantity={ this.handleQuantity }\n                  />\n                </section>\n              )))\n              : (\n                <p data-testid=\"shopping-cart-empty-message\">\n                  Seu carrinho está vazio\n                </p>\n              )}\n          </section>\n          <button\n            data-testid=\"checkout-products\"\n            type=\"button\"\n            className=\"btnCardCheckout\"\n            onClick={ this.handleBtnCheckout }\n          >\n            Finalizar compra\n            {productList && (\n              <h2\n                data-testid=\"shopping-cart-size\"\n              >\n                {productList.length}\n\n              </h2>\n            )}\n\n          </button>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Cart;\n","export async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const fetchApi = await fetch(url);\n  const response = await fetchApi.json();\n  return response;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const urlBase = 'https://api.mercadolibre.com/sites/MLB/search?';\n  let url = '';\n  if (categoryId && query) {\n    url = `${urlBase}category=${categoryId}&q=${query}`;\n  } else if (categoryId && !query) {\n    url = `${urlBase}category=${categoryId}`;\n  } else {\n    url = `${urlBase}q=${query}`;\n  }\n  const fetchApi = await fetch(url);\n  const response = await fetchApi.json();\n  return response;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\n\nclass Home extends React.Component {\n  state = {\n    queryInput: '',\n    categories: '',\n    products: [],\n    searched: false,\n    storageList: [],\n  }\n\n  componentDidMount() {\n    this.getListCategories();\n    this.getLocalStorageList();\n  }\n\n  getLocalStorageList = () => {\n    const productList = JSON.parse(localStorage.getItem('productId'));\n    this.setState({\n      storageList: productList,\n    });\n  }\n\n  getListCategories = async () => {\n    const categoriesList = await getCategories();\n    this.setState({ categories: categoriesList });\n  };\n\n  handleBtnSearch = async ({ target }) => {\n    const { name } = target;\n    const responseApi = await getProductsFromCategoryAndQuery(null, name);\n    const results = await responseApi.results;\n    this.setState({\n      products: results,\n      searched: true,\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleBtnAddCart = ({ target }) => {\n    const { products, storageList } = this.state;\n    const { name } = target;\n    const product = products.find((item) => item.id === name);\n    if (storageList) {\n      const arr = [...storageList];\n      arr.push(product);\n      return this.setState({ storageList: arr }, () => {\n        localStorage.setItem('productId', JSON.stringify(arr));\n      });\n    }\n    const arr = [];\n    arr.push(product);\n    this.setState({ storageList: arr }, () => {\n      localStorage.setItem('productId', JSON.stringify(arr));\n    });\n  }\n\n  handleCategorySearch = async ({ target }) => {\n    const responseApi = await getProductsFromCategoryAndQuery(target.id, null);\n    const { results } = await responseApi;\n    this.setState({\n      products: results,\n      searched: true,\n    });\n  }\n\n  render() {\n    const { categories, queryInput, products, searched, storageList } = this.state;\n    return (\n      <section className=\"main-content\">\n        <Header storageList={ storageList } />\n        <div className=\"content-category-itens\">\n          <div className=\"categories-content\">\n            {categories && categories.map((category) => (\n              <label htmlFor={ category.id } key={ category.id }>\n                {category.name}\n                <input\n                  name=\"category\"\n                  data-testid=\"category\"\n                  input=\"category\"\n                  type=\"radio\"\n                  id={ category.id }\n                  onClick={ this.handleCategorySearch }\n                />\n              </label>\n\n            ))}\n          </div>\n          <section className=\"products-content\">\n            <div className=\"cart-text-search\">\n              <h3 data-testid=\"home-initial-message\">\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </h3>\n            </div>\n            <section className=\"search-bar\">\n              <input\n                type=\"text\"\n                id=\"query-input\"\n                name=\"queryInput\"\n                className=\"inputSearchItem\"\n                data-testid=\"query-input\"\n                value={ queryInput }\n                onChange={ this.handleChange }\n              />\n              <button\n                data-testid=\"query-button\"\n                type=\"button\"\n                className=\"btnSearchItem\"\n                onClick={ this.handleBtnSearch }\n                name={ queryInput }\n              >\n                Pesquisar\n              </button>\n            </section>\n            <section className=\"cards-content\">\n              {products[0] && (\n                products.map((product) => (\n                  <section key={ product.id } className=\"product-card\">\n                    <Link\n                      to={ `/details/${product.id}` }\n                      key={ product.id }\n                      data-testid=\"product-detail-link\"\n                      style={ { textDecoration: 'none', color: 'black' } }\n                    >\n                      <div data-testid=\"product\" className=\"product\">\n                        <img src={ product.thumbnail } alt={ product.title } />\n                        <h4>\n                          Preço:\n                          { product.price }\n                        </h4>\n                        <p>{ product.title }</p>\n                      </div>\n                    </Link>\n                    { product.shipping.free_shipping\n                       && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n                    <button\n                      type=\"button\"\n                      data-testid=\"product-add-to-cart\"\n                      name={ product.id }\n                      onClick={ this.handleBtnAddCart }\n                    >\n                      Adicionar ao Carrinho\n                    </button>\n                  </section>\n                )))}\n            </section>\n            {!products[0] && searched && <p>Nenhum produto foi encontrado</p>}\n          </section>\n        </div>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputRating extends React.Component {\n  render() {\n    const { handleChange } = this.props;\n    return (\n      <>\n        <input\n          type=\"radio\"\n          value=\"1\"\n          name=\"inputRating\"\n          data-testid=\"1-rating\"\n          onChange={ handleChange }\n        />\n        <input\n          type=\"radio\"\n          value=\"2\"\n          name=\"inputRating\"\n          data-testid=\"2-rating\"\n          onChange={ handleChange }\n        />\n        <input\n          type=\"radio\"\n          value=\"3\"\n          name=\"inputRating\"\n          data-testid=\"3-rating\"\n          onChange={ handleChange }\n        />\n        <input\n          type=\"radio\"\n          value=\"4\"\n          name=\"inputRating\"\n          data-testid=\"4-rating\"\n          onChange={ handleChange }\n        />\n        <input\n          type=\"radio\"\n          value=\"5\"\n          name=\"inputRating\"\n          data-testid=\"5-rating\"\n          onChange={ handleChange }\n        />\n      </>\n    );\n  }\n}\n\nInputRating.propTypes = {\n  handleChange: PropTypes.func,\n};\n\nInputRating.defaultProps = {\n  handleChange: () => {},\n};\n\nexport default InputRating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport InputRating from '../components/InputRating';\nimport Footer from '../components/Footer';\n\nclass Details extends React.Component {\n    state = {\n      product: {},\n      productList: '',\n      redirect: false,\n      inputRating: null,\n      email: '',\n      mensagem: '',\n      evaluations: [],\n      hasEvaluations: false,\n      idItem: '',\n      itemPicture: '',\n    }\n\n    componentDidMount() {\n      this.getLocalStorageEvaluations();\n      this.getLocal();\n    }\n\n    getLocal = async () => {\n      const { match: { params: { id } } } = this.props;\n      const url = `https://api.mercadolibre.com/items/${id}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      const list = JSON.parse(localStorage.getItem(id));\n      this.setState({\n        product: data,\n        productList: list,\n        idItem: id,\n        itemPicture: data.pictures[0].url,\n      });\n    }\n\n    getLocalStorageEvaluations = () => {\n      const { match: { params: { id } } } = this.props;\n      if (localStorage.getItem(id)) {\n        const evaluationsList = JSON.parse(localStorage.getItem(id));\n        return this.setState({ evaluations: evaluationsList, hasEvaluations: true });\n      }\n      this.setState({\n        evaluations: [],\n      });\n    }\n\n    handleBtnCart = () => {\n      this.setState({\n        redirect: true,\n      });\n    }\n\n    handleBtnAddCart = () => {\n      // changing\n      const { product, productList } = this.state;\n      if (productList) {\n        const arr = [...productList];\n        arr.push(product);\n        return this.setState({ productList: arr }, () => {\n          localStorage.setItem('productId', JSON.stringify(arr));\n        });\n      }\n      const arr = [];\n      arr.push(product);\n      this.setState({ productList: arr }, () => {\n        localStorage.setItem('productId', JSON.stringify(arr));\n      });\n    };\n\n    handleChange = (event) => {\n      console.log(event.target.value);\n      const { target: { value, checked, name } } = event;\n      const valor = name === 'email' || name === 'mensagem' ? value : checked;\n      if (checked) {\n        return this.setState({\n          [name]: value,\n        });\n      }\n      this.setState({\n        [name]: valor,\n      });\n    }\n\n    handleSubmit = (e) => {\n      const { email, mensagem, inputRating, evaluations, idItem } = this.state;\n      e.preventDefault();\n      if (evaluations) {\n        const obj = { email, mensagem, inputRating };\n        const arr = [...evaluations];\n        arr.push(obj);\n        return this.setState({\n          evaluations: arr,\n          hasEvaluations: true,\n          inputRating: null,\n          email: '',\n          mensagem: '',\n        }, () => localStorage.setItem(idItem, JSON.stringify(arr)));\n      }\n      const obj = { email, mensagem, inputRating };\n      const arr = [];\n      arr.push(obj);\n      this.setState({\n        evaluations: arr,\n        hasEvaluations: true,\n        inputRating: null,\n        email: '',\n        mensagem: '',\n      }, () => localStorage.setItem(idItem, JSON.stringify(arr)));\n    }\n\n    render() {\n      const { product: { price, title, available_quantity }, redirect,\n        email, mensagem, evaluations, hasEvaluations, itemPicture } = this.state;\n      if (redirect) {\n        return (\n          <Redirect to=\"/cart\" />\n        );\n      }\n      return (\n        <div className=\"content-details\">\n          <Header storageList={ JSON.parse(localStorage.getItem('productId')) } />\n          <div className=\"details-item\">\n            <h1 data-testid=\"product-detail-name\">{ title }</h1>\n            <img\n              src={ itemPicture }\n              alt={ title }\n              style={ { width: '13%' } }\n            />\n            <p>\n              {`Preço: R$${price}`}\n            </p>\n            <p>\n              {`Disponibilidade no estoque: ${available_quantity} itens`}\n            </p>\n            <button\n              type=\"button\"\n              data-testid=\"product-detail-add-to-cart\"\n              onClick={ this.handleBtnAddCart }\n            >\n              Adicionar ao Carrinho\n            </button>\n          </div>\n          <div className=\"evaluations\">\n            <fieldset>\n              <legend>Avaliar item</legend>\n              <form className=\"formEvaluate\">\n                <label htmlFor=\"email\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    value={ email }\n                    className=\"inputEmail\"\n                    name=\"email\"\n                    data-testid=\"product-detail-email\"\n                    placeholder=\"Seu e-mail\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <div>\n                  Nota:\n                  <InputRating handleChange={ this.handleChange } />\n                </div>\n                <label htmlFor=\"mensagem\">\n                  <textarea\n                    type=\"text\"\n                    id=\"mensagem\"\n                    value={ mensagem }\n                    name=\"mensagem\"\n                    className=\"mensagemTextArea\"\n                    placeholder=\"Mensagem (opcional)\"\n                    data-testid=\"product-detail-evaluation\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <button\n                  type=\"submit\"\n                  data-testid=\"submit-review-btn\"\n                  className=\"btnEvaluate\"\n                  onClick={ this.handleSubmit }\n                >\n                  Avaliar\n                </button>\n              </form>\n            </fieldset>\n            {hasEvaluations && (\n              <div className=\"evaluations\">\n                <h3>Avaliações de compradores:</h3>\n                {hasEvaluations && evaluations.map((evaluation) => (\n                  <div className=\"evaluations\" key={ evaluation.email }>\n                    <input\n                      type=\"radio\"\n                      value=\"1\"\n                      name={ `inputRated${evaluation.email}` }\n                      checked={ evaluation.inputRating === '1' }\n                    />\n                    <label htmlFor=\"radio-two\">\n                      <input\n                        id=\"radio-two\"\n                        type=\"radio\"\n                        value=\"2\"\n                        name={ `inputRated${evaluation.email}` }\n                        checked={ evaluation.inputRating === '2' }\n                      />\n                    </label>\n                    <input\n                      type=\"radio\"\n                      value=\"3\"\n                      name={ `inputRated${evaluation.email}` }\n                      checked={ evaluation.inputRating === '3' }\n                    />\n                    <input\n                      type=\"radio\"\n                      value=\"4\"\n                      name={ `inputRated${evaluation.email}` }\n                      checked={ evaluation.inputRating === '4' }\n                    />\n                    <input\n                      type=\"radio\"\n                      value=\"5\"\n                      name={ `inputRated${evaluation.email}` }\n                      checked={ evaluation.inputRating === '5' }\n                    />\n                    <p>{ evaluation.email }</p>\n                    <p>{ evaluation.mensagem }</p>\n                  </div>\n                ))}\n              </div>)}\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Details;\n","import React from 'react';\nimport Header from '../components/Header';\n\nclass Checkout extends React.Component {\n  state={\n    productList: '',\n  }\n\n  componentDidMount() {\n    this.getLocalStorageList();\n  }\n\n  getLocalStorageList = () => {\n    const productList = JSON.parse(localStorage.getItem('productId'));\n    this.setState({\n      productList,\n    });\n  }\n\n  handleBtnSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  render() {\n    const { productList } = this.state;\n    return (\n      <div>\n        <Header storageList={ productList } />\n        <form className=\"formCheckout\">\n          <h1>Informações pessoais para conclusão do pedido:</h1>\n          <label htmlFor=\"checkout-fullname\">\n            Nome completo:\n            <input\n              id=\"checkout-fullname\"\n              data-testid=\"checkout-fullname\"\n              type=\"text\"\n            />\n          </label>\n          <label htmlFor=\"checkout-email\">\n            E-mail:\n            <input\n              id=\"checkout-email\"\n              data-testid=\"checkout-email\"\n              type=\"email\"\n            />\n          </label>\n          <label htmlFor=\"checkout-cpf\">\n            Cpf:\n            <input\n              id=\"checkout-cpf\"\n              data-testid=\"checkout-cpf\"\n              type=\"text\"\n            />\n          </label>\n          <label htmlFor=\"checkout-phone\">\n            Telefone:\n            <input\n              id=\"checkout-phone\"\n              data-testid=\"checkout-phone\"\n              type=\"text\"\n            />\n          </label>\n          <label htmlFor=\"checkout-cep\">\n            CEP:\n            <input\n              id=\"checkout-cep\"\n              data-testid=\"checkout-cep\"\n              type=\"text\"\n            />\n          </label>\n          <label htmlFor=\"checkout-address\">\n            Endereço:\n            <input\n              id=\"checkout-address\"\n              data-testid=\"checkout-address\"\n              type=\"text\"\n            />\n          </label>\n          <button\n            type=\"submit\"\n            onClick={ this.handleBtnSubmit }\n          >\n            Finalizar compra\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\nimport './App.css';\nimport Cart from './pages/Cart';\nimport Home from './pages/Home';\nimport Details from './pages/Details';\nimport Checkout from './pages/Checkout';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route path=\"/cart\" component={ Cart } />\n        <Route path=\"/details/:id\" component={ Details } />\n        <Route path=\"/checkout\" component={ Checkout } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/home.css';\nimport './styles/cart-style.css';\nimport './styles/header.css';\nimport './styles/footer.css';\nimport './styles/details.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}